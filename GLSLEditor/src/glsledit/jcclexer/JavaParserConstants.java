/* Generated By:JavaCC: Do not edit this line. JavaParserConstants.java */
package glsledit.jcclexer;

public interface JavaParserConstants {

  int EOF = 0;
  int WHITESPACE = 1;
  int SINGLE_LINE_COMMENT = 4;
  int FORMAL_COMMENT = 5;
  int MULTI_LINE_COMMENT = 6;
  int ABSTRACT = 8;
  int ASSERT = 9;
  int ATTRIBUTE = 10;
  int AUTO = 11;
  int BOOLEAN = 12;
  int BREAK = 13;
  int BYTE = 14;
  int CASE = 15;
  int CATCH = 16;
  int CENTROID = 17;
  int CHAR = 18;
  int CLASS = 19;
  int CONST = 20;
  int CONTINUE = 21;
  int _DEFAULT = 22;
  int DO = 23;
  int DOUBLE = 24;
  int ELSE = 25;
  int ENUM = 26;
  int EXTENDS = 27;
  int FALSE = 28;
  int FINAL = 29;
  int FINALLY = 30;
  int FLAT = 31;
  int FOR = 32;
  int GOTO = 33;
  int IF = 34;
  int IMPLEMENTS = 35;
  int IMPORT = 36;
  int IN = 37;
  int INOUT = 38;
  int INSTANCEOF = 39;
  int INTERFACE = 40;
  int INVARIANT = 41;
  int LONG = 42;
  int NATIVE = 43;
  int NEW = 44;
  int NONPERSPECTIVE = 45;
  int NULL = 46;
  int OUT = 47;
  int PACKAGE = 48;
  int PRIVATE = 49;
  int PROTECTED = 50;
  int PUBLIC = 51;
  int RETURN = 52;
  int SHORT = 53;
  int SMOOTH = 54;
  int STATIC = 55;
  int STRICTFP = 56;
  int SUPER = 57;
  int SWITCH = 58;
  int SYNCHRONIZED = 59;
  int THIS = 60;
  int THROW = 61;
  int THROWS = 62;
  int TRANSIENT = 63;
  int TRUE = 64;
  int TRY = 65;
  int UNIFORM = 66;
  int VARYING = 67;
  int VOID = 68;
  int VOLATILE = 69;
  int WHILE = 70;
  int CROSS = 71;
  int FWIDTH = 72;
  int BVEC2 = 73;
  int VEC4 = 74;
  int USUBBORROW = 75;
  int MATRIXCOMPMULT = 76;
  int NOTEQUAL = 77;
  int UINTBITSTOFLOAT = 78;
  int GL_NORMAL = 79;
  int ALL = 80;
  int BVEC3 = 81;
  int BITCOUNT = 82;
  int GL_NORMALMATRIX = 83;
  int BVEC4 = 84;
  int FINDLSB = 85;
  int GL_BACKCOLOR = 86;
  int GL_MULTITEXCOORD0 = 87;
  int PACKUNORM2X16 = 88;
  int FINDMSB = 89;
  int GL_POSITION = 90;
  int GL_MULTITEXCOORD1 = 91;
  int GL_MODELVIEWPROJECTIONMATRIX = 92;
  int GL_MODELVIEWMATRIXTRANSPOSE = 93;
  int USAMPLER3D = 94;
  int GL_MULTITEXCOORD2 = 95;
  int LDEXP = 96;
  int USAMPLER2D = 97;
  int TEXTURELOD = 98;
  int GL_MULTITEXCOORD3 = 99;
  int GL_PROJECTIONMATRIXINVERSE = 100;
  int BITFIELDINSERT = 101;
  int TEXTUREPROJGRAD = 102;
  int FTRANSFORM = 103;
  int LENGTH = 104;
  int USAMPLER1D = 105;
  int GL_MULTITEXCOORD4 = 106;
  int INTERPOLATEATOFFSET = 107;
  int IVEC2 = 108;
  int ISAMPLER1DARRAY = 109;
  int GL_MULTITEXCOORD5 = 110;
  int UNPACKDOUBLE2X32 = 111;
  int USAMPLERCUBE = 112;
  int UMULEXTENDED = 113;
  int FACEFORWARD = 114;
  int SAMPLERBUFFER = 115;
  int ISAMPLER2DARRAY = 116;
  int IVEC3 = 117;
  int GL_NORMALSCALE = 118;
  int GL_MULTITEXCOORD6 = 119;
  int GL_SECONDARYCOLOR = 120;
  int TEXTUREPROJLOD = 121;
  int GL_FRAGCOORD = 122;
  int DOT = 123;
  int TEXTUREGRAD = 124;
  int TEXTURE3DPROJ = 125;
  int GL_FRONTFACING = 126;
  int IVEC4 = 127;
  int TEXTUREGATHEROFFSET = 128;
  int GL_COLOR = 129;
  int UNPACKUNORM2X16 = 130;
  int GL_MULTITEXCOORD7 = 131;
  int TEXTURE2DPROJ = 132;
  int TEXTUREGATHEROFFSETS = 133;
  int BOOL = 134;
  int GL_PROJECTIONMATRIX = 135;
  int TEXTURE1DPROJ = 136;
  int TEXTUREPROJOFFSET = 137;
  int TEXELFETCH = 138;
  int TEXTURE3D = 139;
  int GL_MODELVIEWPROJECTIONMATRIXINVERSE = 140;
  int INTBITSTOFLOAT = 141;
  int ANY = 142;
  int ENDPRIMITIVE = 143;
  int ENDSTREAMPRIMITIVE = 144;
  int TEXTURE2D = 145;
  int MAT3X2 = 146;
  int MAT2X3 = 147;
  int NORMALIZE = 148;
  int GL_LIGHTMODEL = 149;
  int GL_MODELVIEWPROJECTIONMATRIXINVERSETRANSPOSE = 150;
  int TEXTURE1D = 151;
  int MAT4X2 = 152;
  int GL_CLIPVERTEX = 153;
  int MAT2X4 = 154;
  int TEXTUREOFFSET = 155;
  int SHADOW1DLOD = 156;
  int UADDCARRY = 157;
  int MAT4X3 = 158;
  int MAT3X4 = 159;
  int PACKDOUBLE2X32 = 160;
  int SHADOW2DPROJ = 161;
  int SHADOW2DLOD = 162;
  int GL_PROJECTIONMATRIXTRANSPOSE = 163;
  int INT = 164;
  int GL_BACKSECONDARYCOLOR = 165;
  int SHADOW1DPROJ = 166;
  int ISAMPLER3D = 167;
  int TEXTURECUBE = 168;
  int TEXTURECUBELOD = 169;
  int FREXP = 170;
  int ISAMPLER2D = 171;
  int GL_FOGCOORD = 172;
  int SHADOW1DPROJLOD = 173;
  int ISAMPLER1D = 174;
  int MAT2 = 175;
  int SHADOW2DPROJLOD = 176;
  int SHADOW2D = 177;
  int USAMPLERBUFFER = 178;
  int UVEC2 = 179;
  int GL_PROJECTIONMATRIXINVERSETRANSPOSE = 180;
  int REFRACT = 181;
  int USAMPLER1DARRAY = 182;
  int MAT3 = 183;
  int SHADOW1D = 184;
  int TEXTURE1DLOD = 185;
  int ISAMPLERCUBE = 186;
  int IMULEXTENDED = 187;
  int UVEC3 = 188;
  int USAMPLER2DARRAY = 189;
  int GL_FRONTCOLOR = 190;
  int MAT4 = 191;
  int INTERPOLATEATCENTROID = 192;
  int EQUAL = 193;
  int TEXTURE2DLOD = 194;
  int TEXTUREQUERYLOD = 195;
  int BITFIELDEXTRACT = 196;
  int OUTERPRODUCT = 197;
  int UNPACKUNORM4X8 = 198;
  int UVEC4 = 199;
  int GL_MODELVIEWPROJECTIONMATRIXTRANSPOSE = 200;
  int BITFIELDREVERSE = 201;
  int DETERMINANT = 202;
  int TEXTURE3DLOD = 203;
  int GL_MODELVIEWMATRIX = 204;
  int DISTANCE = 205;
  int DFDX = 206;
  int TEXTURE1DPROJLOD = 207;
  int TEXTUREGATHER = 208;
  int NOISE1 = 209;
  int DFDY = 210;
  int FLOATBITSTOUINT = 211;
  int EMITSTREAMVERTEX = 212;
  int GL_FRAGDEPTH = 213;
  int TEXTURE2DPROJLOD = 214;
  int GL_FRAGCOLOR = 215;
  int GL_POINTSIZE = 216;
  int UNPACKSNORM4X8 = 217;
  int EMITVERTEX = 218;
  int BARRIER = 219;
  int TEXTURE3DPROJLOD = 220;
  int NOISE2 = 221;
  int TEXTUREPROJ = 222;
  int TEXTURELODOFFSET = 223;
  int NOISE3 = 224;
  int SAMPLER3D = 225;
  int TEXTUREPROJGRADOFFSET = 226;
  int GREATERTHANEQUAL = 227;
  int TRANSPOSE = 228;
  int GL_VERTEXID = 229;
  int NOISE4 = 230;
  int SAMPLER2D = 231;
  int FMA = 232;
  int LESSTHANEQUAL = 233;
  int SAMPLER2DSHADOW = 234;
  int LESSTHAN = 235;
  int UINT = 236;
  int SAMPLER1D = 237;
  int GREATERTHAN = 238;
  int SAMPLER1DSHADOW = 239;
  int GL_MODELVIEWMATRIXINVERSE = 240;
  int FLOAT = 241;
  int TEXTUREPROJLODOFFSET = 242;
  int TEXTURESIZE = 243;
  int PACKUNORM4X8 = 244;
  int TEXTUREGRADOFFSET = 245;
  int SAMPLERCUBE = 246;
  int REFLECT = 247;
  int SAMPLERCUBESHADOW = 248;
  int SAMPLER2DRECTSHADOW = 249;
  int SAMPLER2DRECT = 250;
  int SAMPLER1DARRAYSHADOW = 251;
  int PACKSNORM4X8 = 252;
  int GL_VERTEX = 253;
  int GL_FRONTSECONDARYCOLOR = 254;
  int SAMPLER1DARRAY = 255;
  int VEC2 = 256;
  int GL_MODELVIEWMATRIXINVERSETRANSPOSE = 257;
  int INTERPOLATEATSAMPLE = 258;
  int SAMPLER2DARRAYSHADOW = 259;
  int ISAMPLERBUFFER = 260;
  int SAMPLER2DARRAY = 261;
  int GL_FOGFRAGCOORD = 262;
  int GL_POINTCOORD = 263;
  int VEC3 = 264;
  int TEXELFETCHOFFSET = 265;
  int INTEGER_LITERAL = 266;
  int DECIMAL_LITERAL = 267;
  int HEX_LITERAL = 268;
  int OCTAL_LITERAL = 269;
  int FLOATING_POINT_LITERAL = 270;
  int DECIMAL_FLOATING_POINT_LITERAL = 271;
  int DECIMAL_EXPONENT = 272;
  int HEXADECIMAL_FLOATING_POINT_LITERAL = 273;
  int HEXADECIMAL_EXPONENT = 274;
  int CHARACTER_LITERAL = 275;
  int STRING_LITERAL = 276;
  int IDENTIFIER = 277;
  int LETTER = 278;
  int PART_LETTER = 279;
  int LPAREN = 280;
  int RPAREN = 281;
  int LBRACE = 282;
  int RBRACE = 283;
  int LBRACKET = 284;
  int RBRACKET = 285;
  int SEMICOLON = 286;
  int COMMA = 287;
  int DOT2 = 288;
  int AT = 289;
  int ASSIGN = 290;
  int LT = 291;
  int BANG = 292;
  int TILDE = 293;
  int HOOK = 294;
  int COLON = 295;
  int EQ = 296;
  int LE = 297;
  int GE = 298;
  int NE = 299;
  int SC_OR = 300;
  int SC_AND = 301;
  int INCR = 302;
  int DECR = 303;
  int PLUS = 304;
  int MINUS = 305;
  int STAR = 306;
  int SLASH = 307;
  int BIT_AND = 308;
  int BIT_OR = 309;
  int XOR = 310;
  int REM = 311;
  int LSHIFT = 312;
  int PLUSASSIGN = 313;
  int MINUSASSIGN = 314;
  int STARASSIGN = 315;
  int SLASHASSIGN = 316;
  int ANDASSIGN = 317;
  int ORASSIGN = 318;
  int XORASSIGN = 319;
  int REMASSIGN = 320;
  int LSHIFTASSIGN = 321;
  int RSIGNEDSHIFTASSIGN = 322;
  int RUNSIGNEDSHIFTASSIGN = 323;
  int ELLIPSIS = 324;
  int RUNSIGNEDSHIFT = 325;
  int RSIGNEDSHIFT = 326;
  int GT = 327;

  int DEFAULT = 0;
  int IN_FORMAL_COMMENT = 1;
  int IN_MULTI_LINE_COMMENT = 2;

  String[] tokenImage = {
    "<EOF>",
    "<WHITESPACE>",
    "<token of kind 2>",
    "\"/*\"",
    "<SINGLE_LINE_COMMENT>",
    "\"*/\"",
    "\"*/\"",
    "<token of kind 7>",
    "\"abstract\"",
    "\"assert\"",
    "\"attribute\"",
    "\"auto\"",
    "\"boolean\"",
    "\"break\"",
    "\"byte\"",
    "\"case\"",
    "\"catch\"",
    "\"centroid\"",
    "\"char\"",
    "\"class\"",
    "\"const\"",
    "\"continue\"",
    "\"default\"",
    "\"do\"",
    "\"double\"",
    "\"else\"",
    "\"enum\"",
    "\"extends\"",
    "\"false\"",
    "\"final\"",
    "\"finally\"",
    "\"flat\"",
    "\"for\"",
    "\"goto\"",
    "\"if\"",
    "\"implements\"",
    "\"import\"",
    "\"in\"",
    "\"inout\"",
    "\"instanceof\"",
    "\"interface\"",
    "\"invariant\"",
    "\"long\"",
    "\"native\"",
    "\"new\"",
    "\"noperspective\"",
    "\"null\"",
    "\"out\"",
    "\"package\"",
    "\"private\"",
    "\"protected\"",
    "\"public\"",
    "\"return\"",
    "\"short\"",
    "\"smooth\"",
    "\"static\"",
    "\"strictfp\"",
    "\"super\"",
    "\"switch\"",
    "\"synchronized\"",
    "\"this\"",
    "\"throw\"",
    "\"throws\"",
    "\"transient\"",
    "\"true\"",
    "\"try\"",
    "\"uniform\"",
    "\"varying\"",
    "\"void\"",
    "\"volatile\"",
    "\"while\"",
    "\"cross\"",
    "\"fwidth\"",
    "\"bvec2\"",
    "\"vec4\"",
    "\"usubBorrow\"",
    "\"matrixCompMult\"",
    "\"notEqual\"",
    "\"uintBitsToFloat\"",
    "\"gl_Normal\"",
    "\"all\"",
    "\"bvec3\"",
    "\"bitCount\"",
    "\"gl_NormalMatrix\"",
    "\"bvec4\"",
    "\"findLSB\"",
    "\"gl_BackColor\"",
    "\"gl_MultiTexCoord0\"",
    "\"packUnorm2x16\"",
    "\"findMSB\"",
    "\"gl_Position\"",
    "\"gl_MultiTexCoord1\"",
    "\"gl_ModelViewProjectionMatrix\"",
    "\"gl_ModelViewMatrixTranspose\"",
    "\"usampler3D\"",
    "\"gl_MultiTexCoord2\"",
    "\"ldexp\"",
    "\"usampler2D\"",
    "\"textureLod\"",
    "\"gl_MultiTexCoord3\"",
    "\"gl_ProjectionMatrixInverse\"",
    "\"bitfieldInsert\"",
    "\"textureProjGrad\"",
    "\"ftransform\"",
    "\"length\"",
    "\"usampler1D\"",
    "\"gl_MultiTexCoord4\"",
    "\"interpolateAtOffset\"",
    "\"ivec2\"",
    "\"isampler1DArray\"",
    "\"gl_MultiTexCoord5\"",
    "\"unpackDouble2x32\"",
    "\"usamplerCube\"",
    "\"umulExtended\"",
    "\"faceforward\"",
    "\"samplerBuffer\"",
    "\"isampler2DArray\"",
    "\"ivec3\"",
    "\"gl_NormalScale\"",
    "\"gl_MultiTexCoord6\"",
    "\"gl_SecondaryColor\"",
    "\"textureProjLod\"",
    "\"gl_FragCoord\"",
    "\"dot\"",
    "\"textureGrad\"",
    "\"texture3DProj\"",
    "\"gl_FrontFacing\"",
    "\"ivec4\"",
    "\"textureGatherOffset\"",
    "\"gl_Color\"",
    "\"unpackUnorm2x16\"",
    "\"gl_MultiTexCoord7\"",
    "\"texture2DProj\"",
    "\"textureGatherOffsets\"",
    "\"bool\"",
    "\"gl_ProjectionMatrix\"",
    "\"texture1DProj\"",
    "\"textureProjOffset\"",
    "\"texelFetch\"",
    "\"texture3D\"",
    "\"gl_ModelViewProjectionMatrixInverse\"",
    "\"intBitsToFloat\"",
    "\"any\"",
    "\"EndPrimitive\"",
    "\"EndStreamPrimitive\"",
    "\"texture2D\"",
    "\"mat3x2\"",
    "\"mat2x3\"",
    "\"normalize\"",
    "\"gl_LightModel\"",
    "\"gl_ModelViewProjectionMatrixInverseTranspose\"",
    "\"texture1D\"",
    "\"mat4x2\"",
    "\"gl_ClipVertex\"",
    "\"mat2x4\"",
    "\"textureOffset\"",
    "\"shadow1DLod\"",
    "\"uaddCarry\"",
    "\"mat4x3\"",
    "\"mat3x4\"",
    "\"packDouble2x32\"",
    "\"shadow2DProj\"",
    "\"shadow2DLod\"",
    "\"gl_ProjectionMatrixTranspose\"",
    "\"int\"",
    "\"gl_BackSecondaryColor\"",
    "\"shadow1DProj\"",
    "\"isampler3D\"",
    "\"textureCube\"",
    "\"textureCubeLod\"",
    "\"frexp\"",
    "\"isampler2D\"",
    "\"gl_FogCoord\"",
    "\"shadow1DProjLod\"",
    "\"isampler1D\"",
    "\"mat2\"",
    "\"shadow2DProjLod\"",
    "\"shadow2D\"",
    "\"usamplerBuffer\"",
    "\"uvec2\"",
    "\"gl_ProjectionMatrixInverseTranspose\"",
    "\"refract\"",
    "\"usampler1DArray\"",
    "\"mat3\"",
    "\"shadow1D\"",
    "\"texture1DLod\"",
    "\"isamplerCube\"",
    "\"imulExtended\"",
    "\"uvec3\"",
    "\"usampler2DArray\"",
    "\"gl_FrontColor\"",
    "\"mat4\"",
    "\"interpolateAtCentroid\"",
    "\"equal\"",
    "\"texture2DLod\"",
    "\"textureQueryLod\"",
    "\"bitfieldExtract\"",
    "\"outerProduct\"",
    "\"unpackUnorm4x8\"",
    "\"uvec4\"",
    "\"gl_ModelViewProjectionMatrixTranspose\"",
    "\"bitfieldReverse\"",
    "\"determinant\"",
    "\"texture3DLod\"",
    "\"gl_ModelViewMatrix\"",
    "\"distance\"",
    "\"dFdx\"",
    "\"texture1DProjLod\"",
    "\"textureGather\"",
    "\"noise1\"",
    "\"dFdy\"",
    "\"floatBitsToUint\"",
    "\"EmitStreamVertex\"",
    "\"gl_FragDepth\"",
    "\"texture2DProjLod\"",
    "\"gl_FragColor\"",
    "\"gl_PointSize\"",
    "\"unpackSnorm4x8\"",
    "\"EmitVertex\"",
    "\"barrier\"",
    "\"texture3DProjLod\"",
    "\"noise2\"",
    "\"textureProj\"",
    "\"textureLodOffset\"",
    "\"noise3\"",
    "\"sampler3D\"",
    "\"textureProjGradOffset\"",
    "\"greaterThanEqual\"",
    "\"transpose\"",
    "\"gl_VertexID\"",
    "\"noise4\"",
    "\"sampler2D\"",
    "\"fma\"",
    "\"lessThanEqual\"",
    "\"sampler2DShadow\"",
    "\"lessThan\"",
    "\"uint\"",
    "\"sampler1D\"",
    "\"greaterThan\"",
    "\"sampler1DShadow\"",
    "\"gl_ModelViewMatrixInverse\"",
    "\"float\"",
    "\"textureProjLodOffset\"",
    "\"textureSize\"",
    "\"packUnorm4x8\"",
    "\"textureGradOffset\"",
    "\"samplerCube\"",
    "\"reflect\"",
    "\"samplerCubeShadow\"",
    "\"sampler2DRectShadow\"",
    "\"sampler2DRect\"",
    "\"sampler1DArrayShadow\"",
    "\"packSnorm4x8\"",
    "\"gl_Vertex\"",
    "\"gl_FrontSecondaryColor\"",
    "\"sampler1DArray\"",
    "\"vec2\"",
    "\"gl_ModelViewMatrixInverseTranspose\"",
    "\"interpolateAtSample\"",
    "\"sampler2DArrayShadow\"",
    "\"isamplerBuffer\"",
    "\"sampler2DArray\"",
    "\"gl_FogFragCoord\"",
    "\"gl_PointCoord\"",
    "\"vec3\"",
    "\"texelFetchOffset\"",
    "<INTEGER_LITERAL>",
    "<DECIMAL_LITERAL>",
    "<HEX_LITERAL>",
    "<OCTAL_LITERAL>",
    "<FLOATING_POINT_LITERAL>",
    "<DECIMAL_FLOATING_POINT_LITERAL>",
    "<DECIMAL_EXPONENT>",
    "<HEXADECIMAL_FLOATING_POINT_LITERAL>",
    "<HEXADECIMAL_EXPONENT>",
    "<CHARACTER_LITERAL>",
    "<STRING_LITERAL>",
    "<IDENTIFIER>",
    "<LETTER>",
    "<PART_LETTER>",
    "\"(\"",
    "\")\"",
    "\"{\"",
    "\"}\"",
    "\"[\"",
    "\"]\"",
    "\";\"",
    "\",\"",
    "\".\"",
    "\"@\"",
    "\"=\"",
    "\"<\"",
    "\"!\"",
    "\"~\"",
    "\"?\"",
    "\":\"",
    "\"==\"",
    "\"<=\"",
    "\">=\"",
    "\"!=\"",
    "\"||\"",
    "\"&&\"",
    "\"++\"",
    "\"--\"",
    "\"+\"",
    "\"-\"",
    "\"*\"",
    "\"/\"",
    "\"&\"",
    "\"|\"",
    "\"^\"",
    "\"%\"",
    "\"<<\"",
    "\"+=\"",
    "\"-=\"",
    "\"*=\"",
    "\"/=\"",
    "\"&=\"",
    "\"|=\"",
    "\"^=\"",
    "\"%=\"",
    "\"<<=\"",
    "\">>=\"",
    "\">>>=\"",
    "\"...\"",
    "\">>>\"",
    "\">>\"",
    "\">\"",
  };

}
